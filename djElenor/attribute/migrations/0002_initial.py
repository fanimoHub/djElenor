# Generated by Django 4.2.10 on 2024-02-29 08:12

import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('page', '0001_initial'),
        ('attribute', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='attributevariant',
            name='assigned_variants',
            field=models.ManyToManyField(blank=True, related_name='attributesrelated', through='attribute.AssignedVariantAttribute', to='product.productvariant'),
        ),
        migrations.AddField(
            model_name='attributevariant',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributevariant', to='attribute.attribute'),
        ),
        migrations.AddField(
            model_name='attributevariant',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributevariant', to='product.producttype'),
        ),
        migrations.AddField(
            model_name='attributevaluetranslation',
            name='attribute_value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='attribute.attributevalue'),
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='attribute.attribute'),
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='reference_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='references', to='page.page'),
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='reference_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='references', to='product.product'),
        ),
        migrations.AddField(
            model_name='attributevalue',
            name='reference_variant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='references', to='product.productvariant'),
        ),
        migrations.AddField(
            model_name='attributetranslation',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='attribute.attribute'),
        ),
        migrations.AddField(
            model_name='attributeproduct',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributeproduct', to='attribute.attribute'),
        ),
        migrations.AddField(
            model_name='attributeproduct',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributeproduct', to='product.producttype'),
        ),
        migrations.AddField(
            model_name='attributepage',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributepage', to='attribute.attribute'),
        ),
        migrations.AddField(
            model_name='attributepage',
            name='page_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributepage', to='page.pagetype'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='page_types',
            field=models.ManyToManyField(blank=True, related_name='page_attributes', through='attribute.AttributePage', to='page.pagetype'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='product_types',
            field=models.ManyToManyField(blank=True, related_name='product_attributes', through='attribute.AttributeProduct', to='product.producttype'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='product_variant_types',
            field=models.ManyToManyField(blank=True, related_name='variant_attributes', through='attribute.AttributeVariant', to='product.producttype'),
        ),
        migrations.AddField(
            model_name='assignedvariantattributevalue',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variantvalueassignment', to='attribute.assignedvariantattribute'),
        ),
        migrations.AddField(
            model_name='assignedvariantattributevalue',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variantvalueassignment', to='attribute.attributevalue'),
        ),
        migrations.AddField(
            model_name='assignedvariantattribute',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variantassignments', to='attribute.attributevariant'),
        ),
        migrations.AddField(
            model_name='assignedvariantattribute',
            name='values',
            field=models.ManyToManyField(blank=True, related_name='variantassignments', through='attribute.AssignedVariantAttributeValue', to='attribute.attributevalue'),
        ),
        migrations.AddField(
            model_name='assignedvariantattribute',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='product.productvariant'),
        ),
        migrations.AddField(
            model_name='assignedproductattributevalue',
            name='product',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='attributevalues', to='product.product'),
        ),
        migrations.AddField(
            model_name='assignedproductattributevalue',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productvalueassignment', to='attribute.attributevalue'),
        ),
        migrations.AddField(
            model_name='assignedpageattributevalue',
            name='page',
            field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='attributevalues', to='page.page'),
        ),
        migrations.AddField(
            model_name='assignedpageattributevalue',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagevalueassignment', to='attribute.attributevalue'),
        ),
        migrations.AlterUniqueTogether(
            name='attributevariant',
            unique_together={('attribute', 'product_type')},
        ),
        migrations.AlterUniqueTogether(
            name='attributevaluetranslation',
            unique_together={('language_code', 'attribute_value')},
        ),
        migrations.AddIndex(
            model_name='attributevalue',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name', 'slug'], name='attribute_search_gin', opclasses=['gin_trgm_ops', 'gin_trgm_ops']),
        ),
        migrations.AlterUniqueTogether(
            name='attributevalue',
            unique_together={('slug', 'attribute')},
        ),
        migrations.AlterUniqueTogether(
            name='attributetranslation',
            unique_together={('language_code', 'attribute')},
        ),
        migrations.AlterUniqueTogether(
            name='attributeproduct',
            unique_together={('attribute', 'product_type')},
        ),
        migrations.AlterUniqueTogether(
            name='attributepage',
            unique_together={('attribute', 'page_type')},
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=django.contrib.postgres.indexes.GinIndex(fields=['private_metadata'], name='attribute_p_meta_idx'),
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=django.contrib.postgres.indexes.GinIndex(fields=['metadata'], name='attribute_meta_idx'),
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=django.contrib.postgres.indexes.GinIndex(fields=['slug', 'name', 'type', 'input_type', 'entity_type', 'unit'], name='attribute_gin', opclasses=['gin_trgm_ops', 'gin_trgm_ops', 'gin_trgm_ops', 'gin_trgm_ops', 'gin_trgm_ops', 'gin_trgm_ops']),
        ),
        migrations.AlterUniqueTogether(
            name='assignedvariantattributevalue',
            unique_together={('value', 'assignment')},
        ),
        migrations.AlterUniqueTogether(
            name='assignedvariantattribute',
            unique_together={('variant', 'assignment')},
        ),
        migrations.AddIndex(
            model_name='assignedproductattributevalue',
            index=django.contrib.postgres.indexes.BTreeIndex(fields=['product'], name='assignedprodattrval_product_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignedproductattributevalue',
            unique_together={('value', 'product')},
        ),
        migrations.AddIndex(
            model_name='assignedpageattributevalue',
            index=django.contrib.postgres.indexes.BTreeIndex(fields=['page'], name='assignedpageattrvalue_page_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignedpageattributevalue',
            unique_together={('value', 'page')},
        ),
    ]
