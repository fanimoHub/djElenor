# Generated by Django 4.2.10 on 2024-02-29 08:12

from decimal import Decimal
import djElenor.core.utils.json_serializer
import djElenor.core.weight
import djElenor.order.models
import django.contrib.postgres.search
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_measurement.models
import measurement.measures.mass
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tax', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fulfillment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('fulfillment_order', models.PositiveIntegerField(editable=False)),
                ('status', models.CharField(choices=[('fulfilled', 'Fulfilled'), ('refunded', 'Refunded'), ('returned', 'Returned'), ('replaced', 'Replaced'), ('refunded_and_returned', 'Refunded and returned'), ('canceled', 'Canceled'), ('waiting_for_approval', 'Waiting for approval')], default='fulfilled', max_length=32)),
                ('tracking_number', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipping_refund_amount', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('total_refund_amount', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
            ],
            options={
                'ordering': ('pk',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FulfillmentLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('private_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('external_reference', models.CharField(blank=True, db_index=True, max_length=250, null=True, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('number', models.IntegerField(default=djElenor.order.models.get_order_number, editable=False, unique=True)),
                ('use_old_id', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('unconfirmed', 'Unconfirmed'), ('unfulfilled', 'Unfulfilled'), ('partially fulfilled', 'Partially fulfilled'), ('partially_returned', 'Partially returned'), ('returned', 'Returned'), ('fulfilled', 'Fulfilled'), ('canceled', 'Canceled'), ('expired', 'Expired')], default='unfulfilled', max_length=32)),
                ('authorize_status', models.CharField(choices=[('none', 'The funds are not authorized'), ('partial', "The funds that are authorized and charged don't cover fully the order's total"), ('full', "The funds that are authorized and charged fully cover the order's total")], db_index=True, default='none', max_length=32)),
                ('charge_status', models.CharField(choices=[('none', 'The order is not charged.'), ('partial', 'The order is partially charged'), ('full', 'The order is fully charged'), ('overcharged', 'The order is overcharged')], db_index=True, default='none', max_length=32)),
                ('language_code', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('ckb', 'Central Kurdish (Sorani)'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en-us', max_length=35)),
                ('tracking_client_id', models.CharField(blank=True, editable=False, max_length=36)),
                ('user_email', models.EmailField(blank=True, default='', max_length=254)),
                ('origin', models.CharField(choices=[('checkout', 'Checkout'), ('draft', 'Draft'), ('reissue', 'Reissue'), ('bulk_create', 'Bulk create')], max_length=32)),
                ('currency', models.CharField(max_length=3)),
                ('shipping_method_name', models.CharField(blank=True, default=None, editable=False, max_length=255, null=True)),
                ('collection_point_name', models.CharField(blank=True, default=None, editable=False, max_length=255, null=True)),
                ('shipping_price_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), editable=False, max_digits=12)),
                ('shipping_price_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), editable=False, max_digits=12)),
                ('base_shipping_price_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('shipping_tax_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('shipping_tax_class_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_tax_class_private_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('shipping_tax_class_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('checkout_token', models.CharField(blank=True, max_length=36)),
                ('total_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_total_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('total_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_total_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('total_charged_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('total_authorized_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('subtotal_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=12)),
                ('subtotal_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=12)),
                ('voucher_code', models.CharField(blank=True, max_length=255, null=True)),
                ('display_gross_prices', models.BooleanField(default=True)),
                ('customer_note', models.TextField(blank=True, default='')),
                ('weight', django_measurement.models.MeasurementField(default=djElenor.core.weight.zero_weight, measurement=measurement.measures.mass.Mass)),
                ('redirect_url', models.URLField(blank=True, null=True)),
                ('search_document', models.TextField(blank=True, default='')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('should_refresh_prices', models.BooleanField(default=True)),
                ('tax_exemption', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-number',),
                'permissions': (('manage_orders', 'Manage orders.'), ('manage_orders_import', 'Manage orders import.')),
            },
        ),
        migrations.CreateModel(
            name='OrderEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('DRAFT_CREATED', 'draft_created'), ('DRAFT_CREATED_FROM_REPLACE', 'draft_created_from_replace'), ('ADDED_PRODUCTS', 'added_products'), ('REMOVED_PRODUCTS', 'removed_products'), ('PLACED', 'placed'), ('PLACED_FROM_DRAFT', 'placed_from_draft'), ('OVERSOLD_ITEMS', 'oversold_items'), ('CANCELED', 'canceled'), ('EXPIRED', 'expired'), ('ORDER_MARKED_AS_PAID', 'order_marked_as_paid'), ('ORDER_FULLY_PAID', 'order_fully_paid'), ('ORDER_REPLACEMENT_CREATED', 'order_replacement_created'), ('ORDER_DISCOUNT_ADDED', 'order_discount_added'), ('ORDER_DISCOUNT_AUTOMATICALLY_UPDATED', 'order_discount_automatically_updated'), ('ORDER_DISCOUNT_UPDATED', 'order_discount_updated'), ('ORDER_DISCOUNT_DELETED', 'order_discount_deleted'), ('ORDER_LINE_DISCOUNT_UPDATED', 'order_line_discount_updated'), ('ORDER_LINE_DISCOUNT_REMOVED', 'order_line_discount_removed'), ('ORDER_LINE_PRODUCT_DELETED', 'order_line_product_deleted'), ('ORDER_LINE_VARIANT_DELETED', 'order_line_variant_deleted'), ('UPDATED_ADDRESS', 'updated_address'), ('EMAIL_SENT', 'email_sent'), ('CONFIRMED', 'confirmed'), ('PAYMENT_AUTHORIZED', 'payment_authorized'), ('PAYMENT_CAPTURED', 'payment_captured'), ('EXTERNAL_SERVICE_NOTIFICATION', 'external_service_notification'), ('PAYMENT_REFUNDED', 'payment_refunded'), ('PAYMENT_VOIDED', 'payment_voided'), ('PAYMENT_FAILED', 'payment_failed'), ('TRANSACTION_EVENT', 'transaction_event'), ('TRANSACTION_CHARGE_REQUESTED', 'transaction_charge_requested'), ('TRANSACTION_REFUND_REQUESTED', 'transaction_refund_requested'), ('TRANSACTION_CANCEL_REQUESTED', 'transaction_cancel_requested'), ('TRANSACTION_MARK_AS_PAID_FAILED', 'transaction_mark_as_paid_failed'), ('INVOICE_REQUESTED', 'invoice_requested'), ('INVOICE_GENERATED', 'invoice_generated'), ('INVOICE_UPDATED', 'invoice_updated'), ('INVOICE_SENT', 'invoice_sent'), ('FULFILLMENT_CANCELED', 'fulfillment_canceled'), ('FULFILLMENT_RESTOCKED_ITEMS', 'fulfillment_restocked_items'), ('FULFILLMENT_FULFILLED_ITEMS', 'fulfillment_fulfilled_items'), ('FULFILLMENT_REFUNDED', 'fulfillment_refunded'), ('FULFILLMENT_RETURNED', 'fulfillment_returned'), ('FULFILLMENT_REPLACED', 'fulfillment_replaced'), ('FULFILLMENT_AWAITS_APPROVAL', 'fulfillment_awaits_approval'), ('TRACKING_UPDATED', 'tracking_updated'), ('NOTE_ADDED', 'note_added'), ('NOTE_UPDATED', 'note_updated'), ('OTHER', 'other')], max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='OrderGrantedRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('amount_value', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=12)),
                ('currency', models.CharField(max_length=3)),
                ('reason', models.TextField(blank=True, default='')),
                ('shipping_costs_included', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('created_at', 'id'),
            },
        ),
        migrations.CreateModel(
            name='OrderGrantedRefundLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('reason', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('private_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('old_id', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product_name', models.CharField(max_length=386)),
                ('variant_name', models.CharField(blank=True, default='', max_length=255)),
                ('translated_product_name', models.CharField(blank=True, default='', max_length=386)),
                ('translated_variant_name', models.CharField(blank=True, default='', max_length=255)),
                ('product_sku', models.CharField(blank=True, max_length=255, null=True)),
                ('product_variant_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_shipping_required', models.BooleanField()),
                ('is_gift_card', models.BooleanField()),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_fulfilled', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(max_length=3)),
                ('unit_discount_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('unit_discount_type', models.CharField(choices=[('fixed', 'fixed'), ('percentage', '%')], default='fixed', max_length=10)),
                ('unit_discount_reason', models.TextField(blank=True, null=True)),
                ('unit_price_net_amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('unit_discount_value', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('unit_price_gross_amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('total_price_net_amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('total_price_gross_amount', models.DecimalField(decimal_places=3, max_digits=12)),
                ('undiscounted_unit_price_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_unit_price_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_total_price_gross_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_total_price_net_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('base_unit_price_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('undiscounted_base_unit_price_amount', models.DecimalField(decimal_places=3, default=Decimal('0.0'), max_digits=12)),
                ('tax_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('tax_class_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_class_private_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('tax_class_metadata', models.JSONField(blank=True, default=dict, encoder=djElenor.core.utils.json_serializer.CustomJsonEncoder, null=True)),
                ('voucher_code', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='order.order')),
                ('tax_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tax.taxclass')),
            ],
            options={
                'ordering': ('created_at', 'id'),
                'abstract': False,
            },
        ),
    ]
